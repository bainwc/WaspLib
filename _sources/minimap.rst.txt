
Minimap
=======
Methods to handle Minimap. Extends SRL's Minimap.


------------

Minimap.SetCompassAngle
~~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 procedure TRSMinimap.SetCompassAngle(Degrees: Double; Accuracy: Double = 5); override;

Overrides SRL's default **Minimap.SetCompassAngle()** to check if we are logged in and log back in if it times out.


------------

Minimap.WaitMoving
~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 procedure TRSMinimap.WaitMoving(doAntiban: Boolean = True);

Gives **Minimap.WaitPlayerMoving** the ability to perform antiban tasks while moving.

Example
-------
.. code-block:: pascal  

  Minimap.WaitMoving();


------------

Minimap.OnGroundLevel
~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 function TRSMinimap.OnGroundLevel(threshold: Int32 = 3300): Boolean;

**Minimap.OnGroundLevel** returns true if we are likely to be on the ground level.
This works by counting the amount of black in the minimap and might give false positives/negatives if there's more than 3500 black pixels on the minimap.
A **threshold** can be set for this counting, the default being 3300.

Example
-------
.. code-block:: pascal  

  WriteLn Minimap.OnGroundLevel();


------------

Minimap.InPOH
~~~~~~~~~~~~~
.. code-block:: pascal

 function TRSMinimap.InPOH();

**Minimap.InPOH** returns true if we are in a POH.
This might give false positives if you are upstairs or in a place with few colors on the minimap.
It might also give false negatives if the POH is crowded.

Example
-------
.. code-block:: pascal  

.. code-block:: pascal

  WriteLn Minimap.InPOH();


------------

Minimap.FindRedArrow
~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal


  function TRSMinimap.FindRedArrow(out tpa: TPointArray): Boolean;
  function TRSMinimap.FindRedArrow(): Boolean; overload;

Returns true if there's a red arrow on minimap.
If a TPointArray is passed as a parameter it will return with the location of the arrow.

Example
-------
.. code-block:: pascal  

  Writeln Minimap.FindRedArrow();


------------

Minimap.FindYellowArrow
~~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal


  function TRSMinimap.FindYellowArrow(out tpa: TPointArray): Boolean;
  function TRSMinimap.FindYellowArrow(): Boolean; overload;

Returns true if there's a yellow arrow on minimap.
If a TPointArray is passed as a parameter it will return with the location of the arrow tip.

Example
-------
.. code-block:: pascal  

  Writeln Minimap.FindYellowArrow();


------------

MainScreen.FindArrow
~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal


  function TRSMainScreen.FindArrow(out tpa: TPointArray): Boolean;
  function TRSMainScreen.FindArrow(): Boolean; overload;

Returns true if there's a red or yellow arrow on screen.
If a TPointArray is passed as a parameter it will return with the location of the arrow.

Example
-------
.. code-block:: pascal  

  Writeln MainScreen.FindArrow();


------------

Minimap.WaitRedArrow
~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal


  function TRSMinimap.WaitRedArrow(tpa: TPointArray; waitTime: Int32 = 600; interval: Int32 = -1): Boolean;
  function TRSMinimap.WaitRedArrow(waitTime: Int32 = 600; interval: Int32 = -1): Boolean;

Waits **waitTime** for a Red arrow to appear on Minimap.
If a TPointArray is passed as a parameter it will return with the location of the arrow tip.

Example
-------
.. code-block:: pascal  

  Writeln Minimap.WaitRedArrow();


------------

Minimap.WaitYellowArrow
~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal


  function TRSMinimap.WaitYellowArrow(tpa: TPointArray; waitTime: Int32 = 600; interval: Int32 = -1): Boolean;
  function TRSMinimap.WaitYellowArrow(waitTime: Int32 = 600; interval: Int32 = -1): Boolean;

Waits **waitTime** for a yellow arrow to appear on Minimap.
If a TPointArray is passed as a parameter it will return with the location of the arrow tip.

Example
-------
.. code-block:: pascal  

  Writeln Minimap.WaitYellowArrow();


------------

Minimap.WaitArrow
~~~~~~~~~~~~~~~~~
.. code-block:: pascal


  function TRSMinimap.WaitArrow(tpa: TPointArray; waitTime: Int32 = 600; interval: Int32 = -1): Boolean;
  function TRSMinimap.WaitArrow(waitTime: Int32 = 600; interval: Int32 = -1): Boolean;

Waits **waitTime** for a yellow or red arrow to appear on Minimap.
If a TPointArray is passed as a parameter it will return with the location of the arrow.

Example
-------
.. code-block:: pascal  

  Writeln Minimap.WaitArrow();


------------

Minimap.HasDotUnder
~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 function TRSMinimap.HasDotUnder(): Boolean;

Checks if the player has a dot under it. This will include all types of ERSMinimapDot.

Example
-------
.. code-block:: pascal  

  Writeln Minimap.HasDotUnder();


------------
